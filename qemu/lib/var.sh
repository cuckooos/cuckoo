
if [ -z "$QEMU_DIR" ]
then
    echo "ERROR: QEMU directory (variable QEMU_DIR) has not been defined"
    exit 1
fi


if [ -z "$QEMU_ENV_NO" ]
then
    . "${QEMU_DIR}lib/env.sh"
fi


QEMU_ARCH="${QEMU_ARCH:=x86_64}"
QEMU_HD_TYPE="${QEMU_HD_TYPE:=virtio}"
QEMU_CPU_CORES=${QEMU_CPU_CORES:=4}
QEMU_CPU_THREADS=${QEMU_CPU_THREADS:=2}
QEMU_CPU_SOCKETS=${QEMU_CPU_SOCKETS:=1}
QEMU_CDROM_FILE="${QEMU_CDROM_FILE:=}"
QEMU_SMB_DIR="${QEMU_SMB_DIR:=}"
QEMU_FULL_SCREEN="${QEMU_FULL_SCREEN:=}"
QEMU_NO_DAEMONIZE="${QEMU_NO_DAEMONIZE:=}"
QEMU_MEMORY_SIZE="${QEMU_MEMORY_SIZE:=1G}"


case "$QEMU_ARCH" in
    x86_64 )
        QEMU_ARCH_BIN_FILE="$QEMU_ARCH"
        QEMU_CPU_MODEL="qemu64"
    ;;
    x86 )
        QEMU_ARCH_BIN_FILE="i386"
        QEMU_CPU_MODEL="qemu32"
    ;;
esac


QEMU_TMP_DIR="${TMPDIR:=/tmp}/qemu/"
QEMU_LIB_DIR="${QEMU_DIR}lib/"
QEMU_BIN_DIR="${QEMU_DIR}bin/"
QEMU_BIN_ARCH_DIR="${QEMU_BIN_DIR}${QEMU_ARCH}/"
QEMU_BIN_ARCH_OS_DIR="${QEMU_BIN_ARCH_DIR}${QEMU_OS}/"
QEMU_BIN_ARCH_OS_VERSION_FILE="${QEMU_BIN_ARCH_OS_DIR}VERSION"
QEMU_BIN_ARCH_OS_VERSION="$(cat "$QEMU_BIN_ARCH_OS_VERSION_FILE" 2> /dev/null)"
if [ ! -z "$QEMU_BIN_ARCH_OS_VERSION" ]
then
    QEMU_BIN_ARCH_OS_VERSION_DIR="${QEMU_BIN_ARCH_OS_DIR}${QEMU_BIN_ARCH_OS_VERSION}/"
fi
QEMU_BUILD_DIR="${QEMU_DIR}build/"
QEMU_BUILD_ARCH_DIR="${QEMU_BUILD_DIR}${QEMU_ARCH}/"
QEMU_BUILD_ARCH_OS_FILE="${QEMU_BUILD_ARCH_DIR}${QEMU_OS}.sh"
QEMU_BIN_FILE="bin/qemu-system-${QEMU_ARCH_BIN_FILE}"
QEMU_OPTS_EXT="${QEMU_OPTS_EXT:=}"
QEMU_TITLE="${QEMU_TITLE:=$QEMU_BIN_ARCH_OS_VERSION}"
